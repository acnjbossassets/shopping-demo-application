<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:camel="http://camel.apache.org/schema/blueprint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<camelContext trace="false" xmlns="http://camel.apache.org/schema/blueprint">
    <propertyPlaceholder location="classpath:sql.properties" id="properties"/>
    <route id="activeMqHandler">
        <from uri="activemq:queue:insertProductsFromQueue"/>
        <unmarshal>
            <jaxb contextPath="com.redhat.shopping.demo.application.pojos.jpa" prettyPrint="true" partClass="com.redhat.shopping.demo.application.pojos.jpa.Products"/>
        </unmarshal>
        <log message="${body}"/>
        <setHeader headerName="productCode">
            <simple>${body.productcode}</simple>
        </setHeader>
        <setHeader headerName="productName">
            <simple>${body.productName}</simple>
        </setHeader>
        <setHeader headerName="productLine">
            <simple>${body.productLine}</simple>
        </setHeader>
        <setHeader headerName="productScale">
            <simple>${body.productScale}</simple>
        </setHeader>
        <setHeader headerName="productVendor">
            <simple>${body.productVendor}</simple>
        </setHeader>
        <setHeader headerName="productDescription">
            <simple>${body.productDescription}</simple>
        </setHeader>
        <setHeader headerName="quantityInStock">
            <simple>${body.quantityInStock}</simple>
        </setHeader>
        <setHeader headerName="buyPrice">
            <simple>${body.buyPrice}</simple>
        </setHeader>
        <setHeader headerName="MSRP">
            <simple>214.3</simple>
        </setHeader>
        <multicast parallelProcessing="true">
            <to uri="sql:{{sql.Products.addProduct}}"/>
            <setBody>
                <simple>Added a new product:${body.productName}</simple>
            </setBody>
            <to uri="vm:productAdditionTweet"/>
        </multicast>
    </route>
    <route>
        <from uri="activemq:buyProductsByCode"/>
        <log message="Executing {{sql.Products.updateProduct}}"/>
        <log message="Product Code value ${header.productCode}"/>
        <to uri="sql:{{sql.Products.updateProduct}}"/>
    </route>
</camelContext>

</blueprint>
